{"ts":1346389788964,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1346389816682,"patch":[[{"diffs":[[1,"print \"Hello\""]],"start1":0,"start2":0,"length1":0,"length2":13}]],"length":13,"saved":false}
{"ts":1346389838592,"patch":[[{"diffs":[[-1,"print \"Hello\""],[1,"from wsgiref.simple_server import make_server, demo_app\r\n\r\nhttpd = make_server('', 8000, demo_app)\r\nprint \"Serving HTTP on port 8000...\"\r\n\r\n# Respond to requests until process is killed\r\nhttpd.serve_forever()\r\n\r\n# Alternative: serve one request, then exit\r\nhttpd.handle_request()\r\n"]],"start1":0,"start2":0,"length1":13,"length2":281}]],"length":281,"saved":false}
{"contributors":[],"silentsave":true,"ts":1346436852266,"patch":[[{"diffs":[[0,"ref."],[-1,"simple_server import make_server, demo_app\r\n\r\nhttpd = make_server('', 8000, demo_app)\r\nprint \"Serving HTTP on port 8000...\"\r\n\r\n# Respond to requests until process is killed\r\nhttpd.serve_forever()\r\n\r\n# Alternative: serve one request, then exit"],[1,"util import setup_testing_defaults\r\nfrom wsgiref.simple_server import make_server\r\nfrom werkzeug.wrappers import Request, Response\r\nfrom werkzeug.debug import DebuggedApplication\r\nimport os\r\n\r\n\r\n\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\napp.debug = True\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World!\"\r\n\r\n\r\nclass MonitorMiddleware(object):\r\n    \"Example middleware that appends a message to all 200 html responses\"\r\n    def __init__(self, app):\r\n        self.app = app\r\n    def __call__(self, environ, start_response):\r\n        return self.app(environ, start_response)\r\n\r\napp = MonitorMiddleware(app)\r\n\r\nhttpd = make_server(os.environ['IP'], int(os.environ['PORT']), app)\r\n"],[0,"\r\nht"]],"start1":9,"start2":9,"length1":250,"length2":701}]],"length":732,"saved":false}
{"ts":1346436854741,"patch":[[{"diffs":[[0,"t os\r\n\r\n"],[1,"HOST"],[0,"\r\n\r\nfrom"]],"start1":198,"start2":198,"length1":16,"length2":20}]],"length":736,"saved":false}
{"ts":1346436859345,"patch":[[{"diffs":[[0,"\r\n\r\nHOST"],[1,"^="],[0,"\r\n\r\nfrom"]],"start1":202,"start2":202,"length1":16,"length2":18}]],"length":738,"saved":false}
{"ts":1346436860888,"patch":[[{"diffs":[[0,"HOST"],[-1,"^"],[0,"=\r\n\r"]],"start1":206,"start2":206,"length1":9,"length2":8}]],"length":737,"saved":false}
{"ts":1346436866585,"patch":[[{"diffs":[[0,"ver("],[-1,"os.environ['IP']"],[0,", in"]],"start1":658,"start2":658,"length1":24,"length2":8}]],"length":721,"saved":false}
{"ts":1346436867678,"patch":[[{"diffs":[[0,"\n\r\nHOST="],[1,"os.environ['IP']\r\n"],[0,"\r\n\r\nfrom"]],"start1":203,"start2":203,"length1":16,"length2":34}]],"length":739,"saved":false}
{"ts":1346436868317,"patch":[[{"diffs":[[0,"['IP']\r\n"],[1,"P"],[0,"\r\n\r\nfrom"]],"start1":221,"start2":221,"length1":16,"length2":17}]],"length":740,"saved":false}
{"ts":1346436869931,"patch":[[{"diffs":[[0,"'IP']\r\nP"],[1,"ORT="],[0,"\r\n\r\nfrom"]],"start1":222,"start2":222,"length1":16,"length2":20}]],"length":744,"saved":false}
{"ts":1346436880245,"patch":[[{"diffs":[[0,"]\r\nPORT="],[1,"os.environ['PORT']"],[0,"\r\n\r\nfrom"]],"start1":226,"start2":226,"length1":16,"length2":34}]],"length":762,"saved":false}
{"ts":1346436883608,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"httpd = make_server(, int(os.environ['PORT']), app)\r\n\r\nhttpd.handle_request()\r\n"]],"start1":679,"start2":679,"length1":83,"length2":4}]],"length":683,"saved":false}
{"ts":1346436900891,"patch":[[{"diffs":[[0,"are(app)\r\n\r\n"],[1,"if __name__ == '__main__':\r\n    app.run()"]],"start1":671,"start2":671,"length1":12,"length2":53}]],"length":724,"saved":false}
{"ts":1346436915073,"patch":[[{"diffs":[[0,"app.run("],[1,"host="],[0,")"]],"start1":715,"start2":715,"length1":9,"length2":14}]],"length":729,"saved":false}
{"ts":1346436917228,"patch":[[{"diffs":[[0,"un(host="],[1,"HOST, "],[0,")"]],"start1":720,"start2":720,"length1":9,"length2":15}]],"length":735,"saved":false}
{"ts":1346436919123,"patch":[[{"diffs":[[0,"t=HOST, "],[1,"port=P"],[0,")"]],"start1":726,"start2":726,"length1":9,"length2":15}]],"length":741,"saved":false}
{"ts":1346436920739,"patch":[[{"diffs":[[0,", port=P"],[1,"OR"],[0,")"]],"start1":732,"start2":732,"length1":9,"length2":11}]],"length":743,"saved":false}
{"ts":1346436921774,"patch":[[{"diffs":[[0,"port=POR"],[1,"T"],[0,")"]],"start1":734,"start2":734,"length1":9,"length2":10}]],"length":744,"saved":false}
{"contributors":[],"silentsave":false,"ts":1346499565759,"patch":[[{"diffs":[[0,"]\r\nPORT="],[1,"int("],[0,"os.envir"]],"start1":226,"start2":226,"length1":16,"length2":20},{"diffs":[[0,"['PORT']"],[1,")"],[0,"\r\n\r\nfrom"]],"start1":248,"start2":248,"length1":16,"length2":17},{"diffs":[[0,"orld"],[-1,"!\"\r\n"],[1," 2!\", x\r\n\r\n@app.route('/user/<username>')\r\ndef show_user_profile(username):\r\n    # show the user profile for that user\r\n    return 'User %s' % username\r\n\r\n@app.route('/post/<int:post_id>')\r\ndef show_post(post_id):\r\n    # show the post with the given id, the id is an integer\r\n    return 'Post %d' % post_id"],[0,"\r\n\r\n"]],"start1":379,"start2":379,"length1":12,"length2":314},{"diffs":[[0,"nse)\r\n\r\n"],[1,"app.wsgi_"],[0,"app = Mo"]],"start1":950,"start2":950,"length1":16,"length2":25},{"diffs":[[0,"ware(app"],[1,".wsgi_app"],[0,")\r\n\r\nif "]],"start1":986,"start2":986,"length1":16,"length2":25}]],"length":1069,"saved":false}
{"ts":1346499646199,"patch":[[{"diffs":[[0," 2!\""],[-1,", x"],[0,"\r\n\r\n"]],"start1":383,"start2":383,"length1":11,"length2":8}]],"length":1066,"saved":false}
